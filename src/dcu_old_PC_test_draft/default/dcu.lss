
dcu.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000009ae  00000a42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000042  00800080  00800080  00000a62  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000a62  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000079  00000000  00000000  00000a82  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000267  00000000  00000000  00000afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f6  00000000  00000000  00000d62  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000023a  00000000  00000000  00000e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001094  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000a5  00000000  00000000  00001114  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 27 01 	jmp	0x24e	; 0x24e <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ea       	ldi	r30, 0xAE	; 174
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e8       	ldi	r26, 0x80	; 128
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 3c       	cpi	r26, 0xC2	; 194
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
void uputs(char str[]);
char ugetc();
char spiSend(char val);
void setPot(char pot,char val);

int main (void) {
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	e7 97       	sbiw	r28, 0x37	; 55
  9c:	0f b6       	in	r0, 0x3f	; 63
  9e:	f8 94       	cli
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	cd bf       	out	0x3d, r28	; 61
	int i;
	

	/* Debug LED's */
	DDRB = 0xFF;
  a6:	e7 e3       	ldi	r30, 0x37	; 55
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	80 83       	st	Z, r24
	/* Setup serial comms (9600-8-n-1) */
    UCSRA = 0x00;
  ae:	eb e2       	ldi	r30, 0x2B	; 43
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	10 82       	st	Z, r1
    UCSRB = 0x18 | (1<<7);
  b4:	ea e2       	ldi	r30, 0x2A	; 42
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	88 e9       	ldi	r24, 0x98	; 152
  ba:	80 83       	st	Z, r24
    UCSRC = 0x86;
  bc:	e0 e4       	ldi	r30, 0x40	; 64
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	86 e8       	ldi	r24, 0x86	; 134
  c2:	80 83       	st	Z, r24
    UBRRH = 0;
  c4:	e0 e4       	ldi	r30, 0x40	; 64
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	10 82       	st	Z, r1
    UBRRL = 23;
  ca:	e9 e2       	ldi	r30, 0x29	; 41
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	87 e1       	ldi	r24, 0x17	; 23
  d0:	80 83       	st	Z, r24
	
	/* Setup SPI bus (f/2, mode0.0) */
	SPSR = (1<<0);
  d2:	ee e2       	ldi	r30, 0x2E	; 46
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	80 83       	st	Z, r24
	SPCR = (1<<7) | (1<<6) | (1<<4);
  da:	ed e2       	ldi	r30, 0x2D	; 45
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 ed       	ldi	r24, 0xD0	; 208
  e0:	80 83       	st	Z, r24

	/* Reset digital potentiometers */
	static char potpos[6] = {127};
	// Connect terminals
	for (i = 0; i < sizeof(potpos); i++) {
  e2:	1d 82       	std	Y+5, r1	; 0x05
  e4:	1c 82       	std	Y+4, r1	; 0x04
  e6:	10 c0       	rjmp	.+32     	; 0x108 <main+0x76>
		setPot(i,potpos[i]);
  e8:	2c 81       	ldd	r18, Y+4	; 0x04
  ea:	8c 81       	ldd	r24, Y+4	; 0x04
  ec:	9d 81       	ldd	r25, Y+5	; 0x05
  ee:	fc 01       	movw	r30, r24
  f0:	e0 5a       	subi	r30, 0xA0	; 160
  f2:	ff 4f       	sbci	r31, 0xFF	; 255
  f4:	90 81       	ld	r25, Z
  f6:	82 2f       	mov	r24, r18
  f8:	69 2f       	mov	r22, r25
  fa:	0e 94 0c 01 	call	0x218	; 0x218 <setPot>
	SPCR = (1<<7) | (1<<6) | (1<<4);

	/* Reset digital potentiometers */
	static char potpos[6] = {127};
	// Connect terminals
	for (i = 0; i < sizeof(potpos); i++) {
  fe:	8c 81       	ldd	r24, Y+4	; 0x04
 100:	9d 81       	ldd	r25, Y+5	; 0x05
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	9d 83       	std	Y+5, r25	; 0x05
 106:	8c 83       	std	Y+4, r24	; 0x04
 108:	8c 81       	ldd	r24, Y+4	; 0x04
 10a:	9d 81       	ldd	r25, Y+5	; 0x05
 10c:	86 30       	cpi	r24, 0x06	; 6
 10e:	91 05       	cpc	r25, r1
 110:	58 f3       	brcs	.-42     	; 0xe8 <main+0x56>
		setPot(i,potpos[i]);
	}


	sei();
 112:	78 94       	sei

	/* Main program loop */
    while (1){
		char cmd, cc, vv;
		char s[50];
		while(rxcnt == 0);
 114:	80 91 80 00 	lds	r24, 0x0080
 118:	88 23       	and	r24, r24
 11a:	e1 f3       	breq	.-8      	; 0x114 <main+0x82>
		cmd = ugetc();
 11c:	0e 94 c7 01 	call	0x38e	; 0x38e <ugetc>
 120:	8b 83       	std	Y+3, r24	; 0x03
		if(cmd & 0x80){
 122:	8b 81       	ldd	r24, Y+3	; 0x03
 124:	88 23       	and	r24, r24
 126:	b4 f7       	brge	.-20     	; 0x114 <main+0x82>
			cmd = cmd & ~(1<<7);
 128:	8b 81       	ldd	r24, Y+3	; 0x03
 12a:	8f 77       	andi	r24, 0x7F	; 127
 12c:	8b 83       	std	Y+3, r24	; 0x03
			while(rxcnt == 0);
 12e:	80 91 80 00 	lds	r24, 0x0080
 132:	88 23       	and	r24, r24
 134:	e1 f3       	breq	.-8      	; 0x12e <main+0x9c>
			cc = ugetc();
 136:	0e 94 c7 01 	call	0x38e	; 0x38e <ugetc>
 13a:	8a 83       	std	Y+2, r24	; 0x02
			while(rxcnt == 0);
 13c:	80 91 80 00 	lds	r24, 0x0080
 140:	88 23       	and	r24, r24
 142:	e1 f3       	breq	.-8      	; 0x13c <main+0xaa>
			vv = ugetc();
 144:	0e 94 c7 01 	call	0x38e	; 0x38e <ugetc>
 148:	89 83       	std	Y+1, r24	; 0x01
			/* Check command type */
			switch (cmd) {
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	88 2f       	mov	r24, r24
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	81 36       	cpi	r24, 0x61	; 97
 152:	91 05       	cpc	r25, r1
 154:	09 f0       	breq	.+2      	; 0x158 <main+0xc6>
 156:	43 c0       	rjmp	.+134    	; 0x1de <main+0x14c>
				case 'a':	snprintf(s, sizeof(s), "Controller %d = %d", cc, vv);
 158:	8a 81       	ldd	r24, Y+2	; 0x02
 15a:	48 2f       	mov	r20, r24
 15c:	50 e0       	ldi	r21, 0x00	; 0
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	28 2f       	mov	r18, r24
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	8d b7       	in	r24, 0x3d	; 61
 166:	9e b7       	in	r25, 0x3e	; 62
 168:	0a 97       	sbiw	r24, 0x0a	; 10
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	9e bf       	out	0x3e, r25	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	8d bf       	out	0x3d, r24	; 61
 174:	ed b7       	in	r30, 0x3d	; 61
 176:	fe b7       	in	r31, 0x3e	; 62
 178:	31 96       	adiw	r30, 0x01	; 1
 17a:	ce 01       	movw	r24, r28
 17c:	06 96       	adiw	r24, 0x06	; 6
 17e:	91 83       	std	Z+1, r25	; 0x01
 180:	80 83       	st	Z, r24
 182:	82 e3       	ldi	r24, 0x32	; 50
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	93 83       	std	Z+3, r25	; 0x03
 188:	82 83       	std	Z+2, r24	; 0x02
 18a:	86 e6       	ldi	r24, 0x66	; 102
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	95 83       	std	Z+5, r25	; 0x05
 190:	84 83       	std	Z+4, r24	; 0x04
 192:	57 83       	std	Z+7, r21	; 0x07
 194:	46 83       	std	Z+6, r20	; 0x06
 196:	31 87       	std	Z+9, r19	; 0x09
 198:	20 87       	std	Z+8, r18	; 0x08
 19a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <snprintf>
 19e:	8d b7       	in	r24, 0x3d	; 61
 1a0:	9e b7       	in	r25, 0x3e	; 62
 1a2:	0a 96       	adiw	r24, 0x0a	; 10
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	f8 94       	cli
 1a8:	9e bf       	out	0x3e, r25	; 62
 1aa:	0f be       	out	0x3f, r0	; 63
 1ac:	8d bf       	out	0x3d, r24	; 61
							uputs(s);
 1ae:	ce 01       	movw	r24, r28
 1b0:	06 96       	adiw	r24, 0x06	; 6
 1b2:	0e 94 9b 01 	call	0x336	; 0x336 <uputs>
							potpos[(int)cc] = vv;
 1b6:	8a 81       	ldd	r24, Y+2	; 0x02
 1b8:	88 2f       	mov	r24, r24
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	fc 01       	movw	r30, r24
 1be:	e0 5a       	subi	r30, 0xA0	; 160
 1c0:	ff 4f       	sbci	r31, 0xFF	; 255
 1c2:	89 81       	ldd	r24, Y+1	; 0x01
 1c4:	80 83       	st	Z, r24
							setPot(cc,potpos[(int)cc]);
 1c6:	8a 81       	ldd	r24, Y+2	; 0x02
 1c8:	88 2f       	mov	r24, r24
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	fc 01       	movw	r30, r24
 1ce:	e0 5a       	subi	r30, 0xA0	; 160
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	90 81       	ld	r25, Z
 1d4:	8a 81       	ldd	r24, Y+2	; 0x02
 1d6:	69 2f       	mov	r22, r25
 1d8:	0e 94 0c 01 	call	0x218	; 0x218 <setPot>
 1dc:	9b cf       	rjmp	.-202    	; 0x114 <main+0x82>
				//case 'r':	for (i = 0; i < sizeof(potpos); i++) {
				//				potpos[i] = 127;
				//				setPot(i,potpos[i]);
				//			}
				//			break;
				default:	uputs("What?");
 1de:	89 e7       	ldi	r24, 0x79	; 121
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 9b 01 	call	0x336	; 0x336 <uputs>
 1e6:	96 cf       	rjmp	.-212    	; 0x114 <main+0x82>

000001e8 <spiSend>:
		}
	}
    return 0;
}

char spiSend(char val){
 1e8:	df 93       	push	r29
 1ea:	cf 93       	push	r28
 1ec:	0f 92       	push	r0
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	89 83       	std	Y+1, r24	; 0x01
	SPDR = val;						// Transmit data
 1f4:	ef e2       	ldi	r30, 0x2F	; 47
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	80 83       	st	Z, r24
	while((SPSR & (1<<7)) == 0);	// Wait for spi transfer to finish.
 1fc:	ee e2       	ldi	r30, 0x2E	; 46
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	88 23       	and	r24, r24
 204:	dc f7       	brge	.-10     	; 0x1fc <spiSend+0x14>
	val = SPDR;						// Receive data
 206:	ef e2       	ldi	r30, 0x2F	; 47
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	89 83       	std	Y+1, r24	; 0x01
	return val;
 20e:	89 81       	ldd	r24, Y+1	; 0x01
}
 210:	0f 90       	pop	r0
 212:	cf 91       	pop	r28
 214:	df 91       	pop	r29
 216:	08 95       	ret

00000218 <setPot>:

void setPot(char pot,char val){
 218:	df 93       	push	r29
 21a:	cf 93       	push	r28
 21c:	00 d0       	rcall	.+0      	; 0x21e <setPot+0x6>
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	89 83       	std	Y+1, r24	; 0x01
 224:	6a 83       	std	Y+2, r22	; 0x02
	//spiSend(val);
	PORTB = ~(1<<pot);
 226:	e8 e3       	ldi	r30, 0x38	; 56
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	89 81       	ldd	r24, Y+1	; 0x01
 22c:	28 2f       	mov	r18, r24
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 2e       	mov	r0, r18
 236:	02 c0       	rjmp	.+4      	; 0x23c <setPot+0x24>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	0a 94       	dec	r0
 23e:	e2 f7       	brpl	.-8      	; 0x238 <setPot+0x20>
 240:	80 95       	com	r24
 242:	80 83       	st	Z, r24

}
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	cf 91       	pop	r28
 24a:	df 91       	pop	r29
 24c:	08 95       	ret

0000024e <__vector_13>:

ISR (USART_RXC_vect) {
 24e:	1f 92       	push	r1
 250:	0f 92       	push	r0
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	0f 92       	push	r0
 256:	11 24       	eor	r1, r1
 258:	2f 93       	push	r18
 25a:	3f 93       	push	r19
 25c:	4f 93       	push	r20
 25e:	5f 93       	push	r21
 260:	6f 93       	push	r22
 262:	7f 93       	push	r23
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
 268:	af 93       	push	r26
 26a:	bf 93       	push	r27
 26c:	ef 93       	push	r30
 26e:	ff 93       	push	r31
 270:	df 93       	push	r29
 272:	cf 93       	push	r28
 274:	0f 92       	push	r0
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
	char c;
	if (UCSRA & (1<<FE | 1<<DOR | 1<<PE)) {
 27a:	eb e2       	ldi	r30, 0x2B	; 43
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	88 2f       	mov	r24, r24
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	8c 71       	andi	r24, 0x1C	; 28
 286:	90 70       	andi	r25, 0x00	; 0
 288:	00 97       	sbiw	r24, 0x00	; 0
 28a:	41 f0       	breq	.+16     	; 0x29c <__vector_13+0x4e>
	    c = UDR;
 28c:	ec e2       	ldi	r30, 0x2C	; 44
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	80 81       	ld	r24, Z
 292:	89 83       	std	Y+1, r24	; 0x01
	    uputc('?');
 294:	8f e3       	ldi	r24, 0x3F	; 63
 296:	0e 94 84 01 	call	0x308	; 0x308 <uputc>
 29a:	22 c0       	rjmp	.+68     	; 0x2e0 <__vector_13+0x92>
	}
	else
	{
	    c = UDR;
 29c:	ec e2       	ldi	r30, 0x2C	; 44
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	80 81       	ld	r24, Z
 2a2:	89 83       	std	Y+1, r24	; 0x01
	    //PORTB = ~c;
		if (rxcnt < 64) {
 2a4:	80 91 80 00 	lds	r24, 0x0080
 2a8:	80 34       	cpi	r24, 0x40	; 64
 2aa:	b8 f4       	brcc	.+46     	; 0x2da <__vector_13+0x8c>
			sb[rxp & 63] = c;
 2ac:	80 91 81 00 	lds	r24, 0x0081
 2b0:	88 2f       	mov	r24, r24
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	8f 73       	andi	r24, 0x3F	; 63
 2b6:	90 70       	andi	r25, 0x00	; 0
 2b8:	fc 01       	movw	r30, r24
 2ba:	ee 57       	subi	r30, 0x7E	; 126
 2bc:	ff 4f       	sbci	r31, 0xFF	; 255
 2be:	89 81       	ldd	r24, Y+1	; 0x01
 2c0:	80 83       	st	Z, r24
			rxp = (rxp + 1) & 63;
 2c2:	80 91 81 00 	lds	r24, 0x0081
 2c6:	8f 5f       	subi	r24, 0xFF	; 255
 2c8:	8f 73       	andi	r24, 0x3F	; 63
 2ca:	80 93 81 00 	sts	0x0081, r24
			rxcnt ++;
 2ce:	80 91 80 00 	lds	r24, 0x0080
 2d2:	8f 5f       	subi	r24, 0xFF	; 255
 2d4:	80 93 80 00 	sts	0x0080, r24
 2d8:	03 c0       	rjmp	.+6      	; 0x2e0 <__vector_13+0x92>
		}
		else
		{
			uputc('!');
 2da:	81 e2       	ldi	r24, 0x21	; 33
 2dc:	0e 94 84 01 	call	0x308	; 0x308 <uputc>
		}
	}
}
 2e0:	0f 90       	pop	r0
 2e2:	cf 91       	pop	r28
 2e4:	df 91       	pop	r29
 2e6:	ff 91       	pop	r31
 2e8:	ef 91       	pop	r30
 2ea:	bf 91       	pop	r27
 2ec:	af 91       	pop	r26
 2ee:	9f 91       	pop	r25
 2f0:	8f 91       	pop	r24
 2f2:	7f 91       	pop	r23
 2f4:	6f 91       	pop	r22
 2f6:	5f 91       	pop	r21
 2f8:	4f 91       	pop	r20
 2fa:	3f 91       	pop	r19
 2fc:	2f 91       	pop	r18
 2fe:	0f 90       	pop	r0
 300:	0f be       	out	0x3f, r0	; 63
 302:	0f 90       	pop	r0
 304:	1f 90       	pop	r1
 306:	18 95       	reti

00000308 <uputc>:

void uputc(char c) {
 308:	df 93       	push	r29
 30a:	cf 93       	push	r28
 30c:	0f 92       	push	r0
 30e:	cd b7       	in	r28, 0x3d	; 61
 310:	de b7       	in	r29, 0x3e	; 62
 312:	89 83       	std	Y+1, r24	; 0x01
	while (~UCSRA & 1<<UDRE);
 314:	eb e2       	ldi	r30, 0x2B	; 43
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	88 2f       	mov	r24, r24
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	80 72       	andi	r24, 0x20	; 32
 320:	90 70       	andi	r25, 0x00	; 0
 322:	00 97       	sbiw	r24, 0x00	; 0
 324:	b9 f3       	breq	.-18     	; 0x314 <uputc+0xc>
	UDR = c;
 326:	ec e2       	ldi	r30, 0x2C	; 44
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	89 81       	ldd	r24, Y+1	; 0x01
 32c:	80 83       	st	Z, r24
}
 32e:	0f 90       	pop	r0
 330:	cf 91       	pop	r28
 332:	df 91       	pop	r29
 334:	08 95       	ret

00000336 <uputs>:

void uputs(char str[]){
 336:	df 93       	push	r29
 338:	cf 93       	push	r28
 33a:	00 d0       	rcall	.+0      	; 0x33c <uputs+0x6>
 33c:	00 d0       	rcall	.+0      	; 0x33e <uputs+0x8>
 33e:	cd b7       	in	r28, 0x3d	; 61
 340:	de b7       	in	r29, 0x3e	; 62
 342:	9c 83       	std	Y+4, r25	; 0x04
 344:	8b 83       	std	Y+3, r24	; 0x03
	int i;
	for (i = 0; str[i] != '\0'; i++) {
 346:	1a 82       	std	Y+2, r1	; 0x02
 348:	19 82       	std	Y+1, r1	; 0x01
 34a:	10 c0       	rjmp	.+32     	; 0x36c <uputs+0x36>
		uputc(str[i] | 0x80);		// | 0x80 is debug code
 34c:	29 81       	ldd	r18, Y+1	; 0x01
 34e:	3a 81       	ldd	r19, Y+2	; 0x02
 350:	8b 81       	ldd	r24, Y+3	; 0x03
 352:	9c 81       	ldd	r25, Y+4	; 0x04
 354:	fc 01       	movw	r30, r24
 356:	e2 0f       	add	r30, r18
 358:	f3 1f       	adc	r31, r19
 35a:	80 81       	ld	r24, Z
 35c:	80 68       	ori	r24, 0x80	; 128
 35e:	0e 94 84 01 	call	0x308	; 0x308 <uputc>
	UDR = c;
}

void uputs(char str[]){
	int i;
	for (i = 0; str[i] != '\0'; i++) {
 362:	89 81       	ldd	r24, Y+1	; 0x01
 364:	9a 81       	ldd	r25, Y+2	; 0x02
 366:	01 96       	adiw	r24, 0x01	; 1
 368:	9a 83       	std	Y+2, r25	; 0x02
 36a:	89 83       	std	Y+1, r24	; 0x01
 36c:	29 81       	ldd	r18, Y+1	; 0x01
 36e:	3a 81       	ldd	r19, Y+2	; 0x02
 370:	8b 81       	ldd	r24, Y+3	; 0x03
 372:	9c 81       	ldd	r25, Y+4	; 0x04
 374:	fc 01       	movw	r30, r24
 376:	e2 0f       	add	r30, r18
 378:	f3 1f       	adc	r31, r19
 37a:	80 81       	ld	r24, Z
 37c:	88 23       	and	r24, r24
 37e:	31 f7       	brne	.-52     	; 0x34c <uputs+0x16>
		uputc(str[i] | 0x80);		// | 0x80 is debug code
	}
}
 380:	0f 90       	pop	r0
 382:	0f 90       	pop	r0
 384:	0f 90       	pop	r0
 386:	0f 90       	pop	r0
 388:	cf 91       	pop	r28
 38a:	df 91       	pop	r29
 38c:	08 95       	ret

0000038e <ugetc>:

char ugetc() {
 38e:	df 93       	push	r29
 390:	cf 93       	push	r28
 392:	00 d0       	rcall	.+0      	; 0x394 <ugetc+0x6>
 394:	0f 92       	push	r0
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
	char c;
	int offset;
	offset = (rxp - rxcnt) & 63;
 39a:	80 91 81 00 	lds	r24, 0x0081
 39e:	28 2f       	mov	r18, r24
 3a0:	30 e0       	ldi	r19, 0x00	; 0
 3a2:	80 91 80 00 	lds	r24, 0x0080
 3a6:	88 2f       	mov	r24, r24
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	a9 01       	movw	r20, r18
 3ac:	48 1b       	sub	r20, r24
 3ae:	59 0b       	sbc	r21, r25
 3b0:	ca 01       	movw	r24, r20
 3b2:	8f 73       	andi	r24, 0x3F	; 63
 3b4:	90 70       	andi	r25, 0x00	; 0
 3b6:	9a 83       	std	Y+2, r25	; 0x02
 3b8:	89 83       	std	Y+1, r24	; 0x01
	c = sb[offset];
 3ba:	89 81       	ldd	r24, Y+1	; 0x01
 3bc:	9a 81       	ldd	r25, Y+2	; 0x02
 3be:	fc 01       	movw	r30, r24
 3c0:	ee 57       	subi	r30, 0x7E	; 126
 3c2:	ff 4f       	sbci	r31, 0xFF	; 255
 3c4:	80 81       	ld	r24, Z
 3c6:	8b 83       	std	Y+3, r24	; 0x03
	rxcnt --;
 3c8:	80 91 80 00 	lds	r24, 0x0080
 3cc:	81 50       	subi	r24, 0x01	; 1
 3ce:	80 93 80 00 	sts	0x0080, r24
	return c;
 3d2:	8b 81       	ldd	r24, Y+3	; 0x03
}
 3d4:	0f 90       	pop	r0
 3d6:	0f 90       	pop	r0
 3d8:	0f 90       	pop	r0
 3da:	cf 91       	pop	r28
 3dc:	df 91       	pop	r29
 3de:	08 95       	ret

000003e0 <snprintf>:
 3e0:	ae e0       	ldi	r26, 0x0E	; 14
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e6 ef       	ldi	r30, 0xF6	; 246
 3e6:	f1 e0       	ldi	r31, 0x01	; 1
 3e8:	0c 94 ac 04 	jmp	0x958	; 0x958 <__prologue_saves__+0x1c>
 3ec:	0d 89       	ldd	r16, Y+21	; 0x15
 3ee:	1e 89       	ldd	r17, Y+22	; 0x16
 3f0:	8f 89       	ldd	r24, Y+23	; 0x17
 3f2:	98 8d       	ldd	r25, Y+24	; 0x18
 3f4:	97 ff       	sbrs	r25, 7
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <snprintf+0x1c>
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	90 e8       	ldi	r25, 0x80	; 128
 3fc:	01 97       	sbiw	r24, 0x01	; 1
 3fe:	9e 83       	std	Y+6, r25	; 0x06
 400:	8d 83       	std	Y+5, r24	; 0x05
 402:	1a 83       	std	Y+2, r17	; 0x02
 404:	09 83       	std	Y+1, r16	; 0x01
 406:	86 e0       	ldi	r24, 0x06	; 6
 408:	8c 83       	std	Y+4, r24	; 0x04
 40a:	9e 01       	movw	r18, r28
 40c:	25 5e       	subi	r18, 0xE5	; 229
 40e:	3f 4f       	sbci	r19, 0xFF	; 255
 410:	ce 01       	movw	r24, r28
 412:	01 96       	adiw	r24, 0x01	; 1
 414:	69 8d       	ldd	r22, Y+25	; 0x19
 416:	7a 8d       	ldd	r23, Y+26	; 0x1a
 418:	a9 01       	movw	r20, r18
 41a:	0e 94 21 02 	call	0x442	; 0x442 <vfprintf>
 41e:	4d 81       	ldd	r20, Y+5	; 0x05
 420:	5e 81       	ldd	r21, Y+6	; 0x06
 422:	57 fd       	sbrc	r21, 7
 424:	0a c0       	rjmp	.+20     	; 0x43a <snprintf+0x5a>
 426:	2f 81       	ldd	r18, Y+7	; 0x07
 428:	38 85       	ldd	r19, Y+8	; 0x08
 42a:	42 17       	cp	r20, r18
 42c:	53 07       	cpc	r21, r19
 42e:	0c f4       	brge	.+2      	; 0x432 <snprintf+0x52>
 430:	9a 01       	movw	r18, r20
 432:	02 0f       	add	r16, r18
 434:	13 1f       	adc	r17, r19
 436:	f8 01       	movw	r30, r16
 438:	10 82       	st	Z, r1
 43a:	2e 96       	adiw	r28, 0x0e	; 14
 43c:	e4 e0       	ldi	r30, 0x04	; 4
 43e:	0c 94 c8 04 	jmp	0x990	; 0x990 <__epilogue_restores__+0x1c>

00000442 <vfprintf>:
 442:	ab e0       	ldi	r26, 0x0B	; 11
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e7 e2       	ldi	r30, 0x27	; 39
 448:	f2 e0       	ldi	r31, 0x02	; 2
 44a:	0c 94 9e 04 	jmp	0x93c	; 0x93c <__prologue_saves__>
 44e:	3c 01       	movw	r6, r24
 450:	2b 01       	movw	r4, r22
 452:	5a 01       	movw	r10, r20
 454:	fc 01       	movw	r30, r24
 456:	17 82       	std	Z+7, r1	; 0x07
 458:	16 82       	std	Z+6, r1	; 0x06
 45a:	83 81       	ldd	r24, Z+3	; 0x03
 45c:	81 fd       	sbrc	r24, 1
 45e:	03 c0       	rjmp	.+6      	; 0x466 <vfprintf+0x24>
 460:	6f ef       	ldi	r22, 0xFF	; 255
 462:	7f ef       	ldi	r23, 0xFF	; 255
 464:	c6 c1       	rjmp	.+908    	; 0x7f2 <vfprintf+0x3b0>
 466:	9a e0       	ldi	r25, 0x0A	; 10
 468:	89 2e       	mov	r8, r25
 46a:	1e 01       	movw	r2, r28
 46c:	08 94       	sec
 46e:	21 1c       	adc	r2, r1
 470:	31 1c       	adc	r3, r1
 472:	f3 01       	movw	r30, r6
 474:	23 81       	ldd	r18, Z+3	; 0x03
 476:	f2 01       	movw	r30, r4
 478:	23 fd       	sbrc	r18, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	23 ff       	sbrs	r18, 3
 47e:	81 91       	ld	r24, Z+
 480:	2f 01       	movw	r4, r30
 482:	88 23       	and	r24, r24
 484:	09 f4       	brne	.+2      	; 0x488 <vfprintf+0x46>
 486:	b2 c1       	rjmp	.+868    	; 0x7ec <vfprintf+0x3aa>
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	39 f4       	brne	.+14     	; 0x49a <vfprintf+0x58>
 48c:	23 fd       	sbrc	r18, 3
 48e:	85 91       	lpm	r24, Z+
 490:	23 ff       	sbrs	r18, 3
 492:	81 91       	ld	r24, Z+
 494:	2f 01       	movw	r4, r30
 496:	85 32       	cpi	r24, 0x25	; 37
 498:	29 f4       	brne	.+10     	; 0x4a4 <vfprintf+0x62>
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	b3 01       	movw	r22, r6
 49e:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 4a2:	e7 cf       	rjmp	.-50     	; 0x472 <vfprintf+0x30>
 4a4:	98 2f       	mov	r25, r24
 4a6:	ff 24       	eor	r15, r15
 4a8:	ee 24       	eor	r14, r14
 4aa:	99 24       	eor	r9, r9
 4ac:	ff e1       	ldi	r31, 0x1F	; 31
 4ae:	ff 15       	cp	r31, r15
 4b0:	d0 f0       	brcs	.+52     	; 0x4e6 <vfprintf+0xa4>
 4b2:	9b 32       	cpi	r25, 0x2B	; 43
 4b4:	69 f0       	breq	.+26     	; 0x4d0 <vfprintf+0x8e>
 4b6:	9c 32       	cpi	r25, 0x2C	; 44
 4b8:	28 f4       	brcc	.+10     	; 0x4c4 <vfprintf+0x82>
 4ba:	90 32       	cpi	r25, 0x20	; 32
 4bc:	59 f0       	breq	.+22     	; 0x4d4 <vfprintf+0x92>
 4be:	93 32       	cpi	r25, 0x23	; 35
 4c0:	91 f4       	brne	.+36     	; 0x4e6 <vfprintf+0xa4>
 4c2:	0e c0       	rjmp	.+28     	; 0x4e0 <vfprintf+0x9e>
 4c4:	9d 32       	cpi	r25, 0x2D	; 45
 4c6:	49 f0       	breq	.+18     	; 0x4da <vfprintf+0x98>
 4c8:	90 33       	cpi	r25, 0x30	; 48
 4ca:	69 f4       	brne	.+26     	; 0x4e6 <vfprintf+0xa4>
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	24 c0       	rjmp	.+72     	; 0x518 <vfprintf+0xd6>
 4d0:	52 e0       	ldi	r21, 0x02	; 2
 4d2:	f5 2a       	or	r15, r21
 4d4:	84 e0       	ldi	r24, 0x04	; 4
 4d6:	f8 2a       	or	r15, r24
 4d8:	28 c0       	rjmp	.+80     	; 0x52a <vfprintf+0xe8>
 4da:	98 e0       	ldi	r25, 0x08	; 8
 4dc:	f9 2a       	or	r15, r25
 4de:	25 c0       	rjmp	.+74     	; 0x52a <vfprintf+0xe8>
 4e0:	e0 e1       	ldi	r30, 0x10	; 16
 4e2:	fe 2a       	or	r15, r30
 4e4:	22 c0       	rjmp	.+68     	; 0x52a <vfprintf+0xe8>
 4e6:	f7 fc       	sbrc	r15, 7
 4e8:	29 c0       	rjmp	.+82     	; 0x53c <vfprintf+0xfa>
 4ea:	89 2f       	mov	r24, r25
 4ec:	80 53       	subi	r24, 0x30	; 48
 4ee:	8a 30       	cpi	r24, 0x0A	; 10
 4f0:	70 f4       	brcc	.+28     	; 0x50e <vfprintf+0xcc>
 4f2:	f6 fe       	sbrs	r15, 6
 4f4:	05 c0       	rjmp	.+10     	; 0x500 <vfprintf+0xbe>
 4f6:	98 9c       	mul	r9, r8
 4f8:	90 2c       	mov	r9, r0
 4fa:	11 24       	eor	r1, r1
 4fc:	98 0e       	add	r9, r24
 4fe:	15 c0       	rjmp	.+42     	; 0x52a <vfprintf+0xe8>
 500:	e8 9c       	mul	r14, r8
 502:	e0 2c       	mov	r14, r0
 504:	11 24       	eor	r1, r1
 506:	e8 0e       	add	r14, r24
 508:	f0 e2       	ldi	r31, 0x20	; 32
 50a:	ff 2a       	or	r15, r31
 50c:	0e c0       	rjmp	.+28     	; 0x52a <vfprintf+0xe8>
 50e:	9e 32       	cpi	r25, 0x2E	; 46
 510:	29 f4       	brne	.+10     	; 0x51c <vfprintf+0xda>
 512:	f6 fc       	sbrc	r15, 6
 514:	6b c1       	rjmp	.+726    	; 0x7ec <vfprintf+0x3aa>
 516:	40 e4       	ldi	r20, 0x40	; 64
 518:	f4 2a       	or	r15, r20
 51a:	07 c0       	rjmp	.+14     	; 0x52a <vfprintf+0xe8>
 51c:	9c 36       	cpi	r25, 0x6C	; 108
 51e:	19 f4       	brne	.+6      	; 0x526 <vfprintf+0xe4>
 520:	50 e8       	ldi	r21, 0x80	; 128
 522:	f5 2a       	or	r15, r21
 524:	02 c0       	rjmp	.+4      	; 0x52a <vfprintf+0xe8>
 526:	98 36       	cpi	r25, 0x68	; 104
 528:	49 f4       	brne	.+18     	; 0x53c <vfprintf+0xfa>
 52a:	f2 01       	movw	r30, r4
 52c:	23 fd       	sbrc	r18, 3
 52e:	95 91       	lpm	r25, Z+
 530:	23 ff       	sbrs	r18, 3
 532:	91 91       	ld	r25, Z+
 534:	2f 01       	movw	r4, r30
 536:	99 23       	and	r25, r25
 538:	09 f0       	breq	.+2      	; 0x53c <vfprintf+0xfa>
 53a:	b8 cf       	rjmp	.-144    	; 0x4ac <vfprintf+0x6a>
 53c:	89 2f       	mov	r24, r25
 53e:	85 54       	subi	r24, 0x45	; 69
 540:	83 30       	cpi	r24, 0x03	; 3
 542:	18 f0       	brcs	.+6      	; 0x54a <vfprintf+0x108>
 544:	80 52       	subi	r24, 0x20	; 32
 546:	83 30       	cpi	r24, 0x03	; 3
 548:	38 f4       	brcc	.+14     	; 0x558 <vfprintf+0x116>
 54a:	44 e0       	ldi	r20, 0x04	; 4
 54c:	50 e0       	ldi	r21, 0x00	; 0
 54e:	a4 0e       	add	r10, r20
 550:	b5 1e       	adc	r11, r21
 552:	5f e3       	ldi	r21, 0x3F	; 63
 554:	59 83       	std	Y+1, r21	; 0x01
 556:	0f c0       	rjmp	.+30     	; 0x576 <vfprintf+0x134>
 558:	93 36       	cpi	r25, 0x63	; 99
 55a:	31 f0       	breq	.+12     	; 0x568 <vfprintf+0x126>
 55c:	93 37       	cpi	r25, 0x73	; 115
 55e:	79 f0       	breq	.+30     	; 0x57e <vfprintf+0x13c>
 560:	93 35       	cpi	r25, 0x53	; 83
 562:	09 f0       	breq	.+2      	; 0x566 <vfprintf+0x124>
 564:	56 c0       	rjmp	.+172    	; 0x612 <vfprintf+0x1d0>
 566:	20 c0       	rjmp	.+64     	; 0x5a8 <vfprintf+0x166>
 568:	f5 01       	movw	r30, r10
 56a:	80 81       	ld	r24, Z
 56c:	89 83       	std	Y+1, r24	; 0x01
 56e:	42 e0       	ldi	r20, 0x02	; 2
 570:	50 e0       	ldi	r21, 0x00	; 0
 572:	a4 0e       	add	r10, r20
 574:	b5 1e       	adc	r11, r21
 576:	61 01       	movw	r12, r2
 578:	01 e0       	ldi	r16, 0x01	; 1
 57a:	10 e0       	ldi	r17, 0x00	; 0
 57c:	12 c0       	rjmp	.+36     	; 0x5a2 <vfprintf+0x160>
 57e:	f5 01       	movw	r30, r10
 580:	c0 80       	ld	r12, Z
 582:	d1 80       	ldd	r13, Z+1	; 0x01
 584:	f6 fc       	sbrc	r15, 6
 586:	03 c0       	rjmp	.+6      	; 0x58e <vfprintf+0x14c>
 588:	6f ef       	ldi	r22, 0xFF	; 255
 58a:	7f ef       	ldi	r23, 0xFF	; 255
 58c:	02 c0       	rjmp	.+4      	; 0x592 <vfprintf+0x150>
 58e:	69 2d       	mov	r22, r9
 590:	70 e0       	ldi	r23, 0x00	; 0
 592:	42 e0       	ldi	r20, 0x02	; 2
 594:	50 e0       	ldi	r21, 0x00	; 0
 596:	a4 0e       	add	r10, r20
 598:	b5 1e       	adc	r11, r21
 59a:	c6 01       	movw	r24, r12
 59c:	0e 94 09 04 	call	0x812	; 0x812 <strnlen>
 5a0:	8c 01       	movw	r16, r24
 5a2:	5f e7       	ldi	r21, 0x7F	; 127
 5a4:	f5 22       	and	r15, r21
 5a6:	14 c0       	rjmp	.+40     	; 0x5d0 <vfprintf+0x18e>
 5a8:	f5 01       	movw	r30, r10
 5aa:	c0 80       	ld	r12, Z
 5ac:	d1 80       	ldd	r13, Z+1	; 0x01
 5ae:	f6 fc       	sbrc	r15, 6
 5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <vfprintf+0x176>
 5b2:	6f ef       	ldi	r22, 0xFF	; 255
 5b4:	7f ef       	ldi	r23, 0xFF	; 255
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <vfprintf+0x17a>
 5b8:	69 2d       	mov	r22, r9
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	42 e0       	ldi	r20, 0x02	; 2
 5be:	50 e0       	ldi	r21, 0x00	; 0
 5c0:	a4 0e       	add	r10, r20
 5c2:	b5 1e       	adc	r11, r21
 5c4:	c6 01       	movw	r24, r12
 5c6:	0e 94 fe 03 	call	0x7fc	; 0x7fc <strnlen_P>
 5ca:	8c 01       	movw	r16, r24
 5cc:	50 e8       	ldi	r21, 0x80	; 128
 5ce:	f5 2a       	or	r15, r21
 5d0:	f3 fe       	sbrs	r15, 3
 5d2:	07 c0       	rjmp	.+14     	; 0x5e2 <vfprintf+0x1a0>
 5d4:	1a c0       	rjmp	.+52     	; 0x60a <vfprintf+0x1c8>
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	b3 01       	movw	r22, r6
 5dc:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 5e0:	ea 94       	dec	r14
 5e2:	8e 2d       	mov	r24, r14
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	08 17       	cp	r16, r24
 5e8:	19 07       	cpc	r17, r25
 5ea:	a8 f3       	brcs	.-22     	; 0x5d6 <vfprintf+0x194>
 5ec:	0e c0       	rjmp	.+28     	; 0x60a <vfprintf+0x1c8>
 5ee:	f6 01       	movw	r30, r12
 5f0:	f7 fc       	sbrc	r15, 7
 5f2:	85 91       	lpm	r24, Z+
 5f4:	f7 fe       	sbrs	r15, 7
 5f6:	81 91       	ld	r24, Z+
 5f8:	6f 01       	movw	r12, r30
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	b3 01       	movw	r22, r6
 5fe:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 602:	e1 10       	cpse	r14, r1
 604:	ea 94       	dec	r14
 606:	01 50       	subi	r16, 0x01	; 1
 608:	10 40       	sbci	r17, 0x00	; 0
 60a:	01 15       	cp	r16, r1
 60c:	11 05       	cpc	r17, r1
 60e:	79 f7       	brne	.-34     	; 0x5ee <vfprintf+0x1ac>
 610:	ea c0       	rjmp	.+468    	; 0x7e6 <vfprintf+0x3a4>
 612:	94 36       	cpi	r25, 0x64	; 100
 614:	11 f0       	breq	.+4      	; 0x61a <vfprintf+0x1d8>
 616:	99 36       	cpi	r25, 0x69	; 105
 618:	69 f5       	brne	.+90     	; 0x674 <vfprintf+0x232>
 61a:	f7 fe       	sbrs	r15, 7
 61c:	08 c0       	rjmp	.+16     	; 0x62e <vfprintf+0x1ec>
 61e:	f5 01       	movw	r30, r10
 620:	20 81       	ld	r18, Z
 622:	31 81       	ldd	r19, Z+1	; 0x01
 624:	42 81       	ldd	r20, Z+2	; 0x02
 626:	53 81       	ldd	r21, Z+3	; 0x03
 628:	84 e0       	ldi	r24, 0x04	; 4
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0a c0       	rjmp	.+20     	; 0x642 <vfprintf+0x200>
 62e:	f5 01       	movw	r30, r10
 630:	80 81       	ld	r24, Z
 632:	91 81       	ldd	r25, Z+1	; 0x01
 634:	9c 01       	movw	r18, r24
 636:	44 27       	eor	r20, r20
 638:	37 fd       	sbrc	r19, 7
 63a:	40 95       	com	r20
 63c:	54 2f       	mov	r21, r20
 63e:	82 e0       	ldi	r24, 0x02	; 2
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	a8 0e       	add	r10, r24
 644:	b9 1e       	adc	r11, r25
 646:	9f e6       	ldi	r25, 0x6F	; 111
 648:	f9 22       	and	r15, r25
 64a:	57 ff       	sbrs	r21, 7
 64c:	09 c0       	rjmp	.+18     	; 0x660 <vfprintf+0x21e>
 64e:	50 95       	com	r21
 650:	40 95       	com	r20
 652:	30 95       	com	r19
 654:	21 95       	neg	r18
 656:	3f 4f       	sbci	r19, 0xFF	; 255
 658:	4f 4f       	sbci	r20, 0xFF	; 255
 65a:	5f 4f       	sbci	r21, 0xFF	; 255
 65c:	e0 e8       	ldi	r30, 0x80	; 128
 65e:	fe 2a       	or	r15, r30
 660:	ca 01       	movw	r24, r20
 662:	b9 01       	movw	r22, r18
 664:	a1 01       	movw	r20, r2
 666:	2a e0       	ldi	r18, 0x0A	; 10
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	0e 94 40 04 	call	0x880	; 0x880 <__ultoa_invert>
 66e:	d8 2e       	mov	r13, r24
 670:	d2 18       	sub	r13, r2
 672:	40 c0       	rjmp	.+128    	; 0x6f4 <vfprintf+0x2b2>
 674:	95 37       	cpi	r25, 0x75	; 117
 676:	29 f4       	brne	.+10     	; 0x682 <vfprintf+0x240>
 678:	1f 2d       	mov	r17, r15
 67a:	1f 7e       	andi	r17, 0xEF	; 239
 67c:	2a e0       	ldi	r18, 0x0A	; 10
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	1d c0       	rjmp	.+58     	; 0x6bc <vfprintf+0x27a>
 682:	1f 2d       	mov	r17, r15
 684:	19 7f       	andi	r17, 0xF9	; 249
 686:	9f 36       	cpi	r25, 0x6F	; 111
 688:	61 f0       	breq	.+24     	; 0x6a2 <vfprintf+0x260>
 68a:	90 37       	cpi	r25, 0x70	; 112
 68c:	20 f4       	brcc	.+8      	; 0x696 <vfprintf+0x254>
 68e:	98 35       	cpi	r25, 0x58	; 88
 690:	09 f0       	breq	.+2      	; 0x694 <vfprintf+0x252>
 692:	ac c0       	rjmp	.+344    	; 0x7ec <vfprintf+0x3aa>
 694:	0f c0       	rjmp	.+30     	; 0x6b4 <vfprintf+0x272>
 696:	90 37       	cpi	r25, 0x70	; 112
 698:	39 f0       	breq	.+14     	; 0x6a8 <vfprintf+0x266>
 69a:	98 37       	cpi	r25, 0x78	; 120
 69c:	09 f0       	breq	.+2      	; 0x6a0 <vfprintf+0x25e>
 69e:	a6 c0       	rjmp	.+332    	; 0x7ec <vfprintf+0x3aa>
 6a0:	04 c0       	rjmp	.+8      	; 0x6aa <vfprintf+0x268>
 6a2:	28 e0       	ldi	r18, 0x08	; 8
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	0a c0       	rjmp	.+20     	; 0x6bc <vfprintf+0x27a>
 6a8:	10 61       	ori	r17, 0x10	; 16
 6aa:	14 fd       	sbrc	r17, 4
 6ac:	14 60       	ori	r17, 0x04	; 4
 6ae:	20 e1       	ldi	r18, 0x10	; 16
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	04 c0       	rjmp	.+8      	; 0x6bc <vfprintf+0x27a>
 6b4:	14 fd       	sbrc	r17, 4
 6b6:	16 60       	ori	r17, 0x06	; 6
 6b8:	20 e1       	ldi	r18, 0x10	; 16
 6ba:	32 e0       	ldi	r19, 0x02	; 2
 6bc:	17 ff       	sbrs	r17, 7
 6be:	08 c0       	rjmp	.+16     	; 0x6d0 <vfprintf+0x28e>
 6c0:	f5 01       	movw	r30, r10
 6c2:	60 81       	ld	r22, Z
 6c4:	71 81       	ldd	r23, Z+1	; 0x01
 6c6:	82 81       	ldd	r24, Z+2	; 0x02
 6c8:	93 81       	ldd	r25, Z+3	; 0x03
 6ca:	44 e0       	ldi	r20, 0x04	; 4
 6cc:	50 e0       	ldi	r21, 0x00	; 0
 6ce:	08 c0       	rjmp	.+16     	; 0x6e0 <vfprintf+0x29e>
 6d0:	f5 01       	movw	r30, r10
 6d2:	80 81       	ld	r24, Z
 6d4:	91 81       	ldd	r25, Z+1	; 0x01
 6d6:	bc 01       	movw	r22, r24
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	42 e0       	ldi	r20, 0x02	; 2
 6de:	50 e0       	ldi	r21, 0x00	; 0
 6e0:	a4 0e       	add	r10, r20
 6e2:	b5 1e       	adc	r11, r21
 6e4:	a1 01       	movw	r20, r2
 6e6:	0e 94 40 04 	call	0x880	; 0x880 <__ultoa_invert>
 6ea:	d8 2e       	mov	r13, r24
 6ec:	d2 18       	sub	r13, r2
 6ee:	8f e7       	ldi	r24, 0x7F	; 127
 6f0:	f8 2e       	mov	r15, r24
 6f2:	f1 22       	and	r15, r17
 6f4:	f6 fe       	sbrs	r15, 6
 6f6:	0b c0       	rjmp	.+22     	; 0x70e <vfprintf+0x2cc>
 6f8:	5e ef       	ldi	r21, 0xFE	; 254
 6fa:	f5 22       	and	r15, r21
 6fc:	d9 14       	cp	r13, r9
 6fe:	38 f4       	brcc	.+14     	; 0x70e <vfprintf+0x2cc>
 700:	f4 fe       	sbrs	r15, 4
 702:	07 c0       	rjmp	.+14     	; 0x712 <vfprintf+0x2d0>
 704:	f2 fc       	sbrc	r15, 2
 706:	05 c0       	rjmp	.+10     	; 0x712 <vfprintf+0x2d0>
 708:	8f ee       	ldi	r24, 0xEF	; 239
 70a:	f8 22       	and	r15, r24
 70c:	02 c0       	rjmp	.+4      	; 0x712 <vfprintf+0x2d0>
 70e:	1d 2d       	mov	r17, r13
 710:	01 c0       	rjmp	.+2      	; 0x714 <vfprintf+0x2d2>
 712:	19 2d       	mov	r17, r9
 714:	f4 fe       	sbrs	r15, 4
 716:	0d c0       	rjmp	.+26     	; 0x732 <vfprintf+0x2f0>
 718:	fe 01       	movw	r30, r28
 71a:	ed 0d       	add	r30, r13
 71c:	f1 1d       	adc	r31, r1
 71e:	80 81       	ld	r24, Z
 720:	80 33       	cpi	r24, 0x30	; 48
 722:	19 f4       	brne	.+6      	; 0x72a <vfprintf+0x2e8>
 724:	99 ee       	ldi	r25, 0xE9	; 233
 726:	f9 22       	and	r15, r25
 728:	08 c0       	rjmp	.+16     	; 0x73a <vfprintf+0x2f8>
 72a:	1f 5f       	subi	r17, 0xFF	; 255
 72c:	f2 fe       	sbrs	r15, 2
 72e:	05 c0       	rjmp	.+10     	; 0x73a <vfprintf+0x2f8>
 730:	03 c0       	rjmp	.+6      	; 0x738 <vfprintf+0x2f6>
 732:	8f 2d       	mov	r24, r15
 734:	86 78       	andi	r24, 0x86	; 134
 736:	09 f0       	breq	.+2      	; 0x73a <vfprintf+0x2f8>
 738:	1f 5f       	subi	r17, 0xFF	; 255
 73a:	0f 2d       	mov	r16, r15
 73c:	f3 fc       	sbrc	r15, 3
 73e:	14 c0       	rjmp	.+40     	; 0x768 <vfprintf+0x326>
 740:	f0 fe       	sbrs	r15, 0
 742:	0f c0       	rjmp	.+30     	; 0x762 <vfprintf+0x320>
 744:	1e 15       	cp	r17, r14
 746:	10 f0       	brcs	.+4      	; 0x74c <vfprintf+0x30a>
 748:	9d 2c       	mov	r9, r13
 74a:	0b c0       	rjmp	.+22     	; 0x762 <vfprintf+0x320>
 74c:	9d 2c       	mov	r9, r13
 74e:	9e 0c       	add	r9, r14
 750:	91 1a       	sub	r9, r17
 752:	1e 2d       	mov	r17, r14
 754:	06 c0       	rjmp	.+12     	; 0x762 <vfprintf+0x320>
 756:	80 e2       	ldi	r24, 0x20	; 32
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	b3 01       	movw	r22, r6
 75c:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 760:	1f 5f       	subi	r17, 0xFF	; 255
 762:	1e 15       	cp	r17, r14
 764:	c0 f3       	brcs	.-16     	; 0x756 <vfprintf+0x314>
 766:	04 c0       	rjmp	.+8      	; 0x770 <vfprintf+0x32e>
 768:	1e 15       	cp	r17, r14
 76a:	10 f4       	brcc	.+4      	; 0x770 <vfprintf+0x32e>
 76c:	e1 1a       	sub	r14, r17
 76e:	01 c0       	rjmp	.+2      	; 0x772 <vfprintf+0x330>
 770:	ee 24       	eor	r14, r14
 772:	04 ff       	sbrs	r16, 4
 774:	0f c0       	rjmp	.+30     	; 0x794 <vfprintf+0x352>
 776:	80 e3       	ldi	r24, 0x30	; 48
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	b3 01       	movw	r22, r6
 77c:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 780:	02 ff       	sbrs	r16, 2
 782:	1d c0       	rjmp	.+58     	; 0x7be <vfprintf+0x37c>
 784:	01 fd       	sbrc	r16, 1
 786:	03 c0       	rjmp	.+6      	; 0x78e <vfprintf+0x34c>
 788:	88 e7       	ldi	r24, 0x78	; 120
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e c0       	rjmp	.+28     	; 0x7aa <vfprintf+0x368>
 78e:	88 e5       	ldi	r24, 0x58	; 88
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0b c0       	rjmp	.+22     	; 0x7aa <vfprintf+0x368>
 794:	80 2f       	mov	r24, r16
 796:	86 78       	andi	r24, 0x86	; 134
 798:	91 f0       	breq	.+36     	; 0x7be <vfprintf+0x37c>
 79a:	01 ff       	sbrs	r16, 1
 79c:	02 c0       	rjmp	.+4      	; 0x7a2 <vfprintf+0x360>
 79e:	8b e2       	ldi	r24, 0x2B	; 43
 7a0:	01 c0       	rjmp	.+2      	; 0x7a4 <vfprintf+0x362>
 7a2:	80 e2       	ldi	r24, 0x20	; 32
 7a4:	f7 fc       	sbrc	r15, 7
 7a6:	8d e2       	ldi	r24, 0x2D	; 45
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	b3 01       	movw	r22, r6
 7ac:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 7b0:	06 c0       	rjmp	.+12     	; 0x7be <vfprintf+0x37c>
 7b2:	80 e3       	ldi	r24, 0x30	; 48
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	b3 01       	movw	r22, r6
 7b8:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 7bc:	9a 94       	dec	r9
 7be:	d9 14       	cp	r13, r9
 7c0:	c0 f3       	brcs	.-16     	; 0x7b2 <vfprintf+0x370>
 7c2:	da 94       	dec	r13
 7c4:	f1 01       	movw	r30, r2
 7c6:	ed 0d       	add	r30, r13
 7c8:	f1 1d       	adc	r31, r1
 7ca:	80 81       	ld	r24, Z
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	b3 01       	movw	r22, r6
 7d0:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 7d4:	dd 20       	and	r13, r13
 7d6:	a9 f7       	brne	.-22     	; 0x7c2 <vfprintf+0x380>
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0x3a4>
 7da:	80 e2       	ldi	r24, 0x20	; 32
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	b3 01       	movw	r22, r6
 7e0:	0e 94 14 04 	call	0x828	; 0x828 <fputc>
 7e4:	ea 94       	dec	r14
 7e6:	ee 20       	and	r14, r14
 7e8:	c1 f7       	brne	.-16     	; 0x7da <vfprintf+0x398>
 7ea:	43 ce       	rjmp	.-890    	; 0x472 <vfprintf+0x30>
 7ec:	f3 01       	movw	r30, r6
 7ee:	66 81       	ldd	r22, Z+6	; 0x06
 7f0:	77 81       	ldd	r23, Z+7	; 0x07
 7f2:	cb 01       	movw	r24, r22
 7f4:	2b 96       	adiw	r28, 0x0b	; 11
 7f6:	e2 e1       	ldi	r30, 0x12	; 18
 7f8:	0c 94 ba 04 	jmp	0x974	; 0x974 <__epilogue_restores__>

000007fc <strnlen_P>:
 7fc:	fc 01       	movw	r30, r24
 7fe:	05 90       	lpm	r0, Z+
 800:	61 50       	subi	r22, 0x01	; 1
 802:	70 40       	sbci	r23, 0x00	; 0
 804:	01 10       	cpse	r0, r1
 806:	d8 f7       	brcc	.-10     	; 0x7fe <strnlen_P+0x2>
 808:	80 95       	com	r24
 80a:	90 95       	com	r25
 80c:	8e 0f       	add	r24, r30
 80e:	9f 1f       	adc	r25, r31
 810:	08 95       	ret

00000812 <strnlen>:
 812:	fc 01       	movw	r30, r24
 814:	61 50       	subi	r22, 0x01	; 1
 816:	70 40       	sbci	r23, 0x00	; 0
 818:	01 90       	ld	r0, Z+
 81a:	01 10       	cpse	r0, r1
 81c:	d8 f7       	brcc	.-10     	; 0x814 <strnlen+0x2>
 81e:	80 95       	com	r24
 820:	90 95       	com	r25
 822:	8e 0f       	add	r24, r30
 824:	9f 1f       	adc	r25, r31
 826:	08 95       	ret

00000828 <fputc>:
 828:	0f 93       	push	r16
 82a:	1f 93       	push	r17
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
 830:	8c 01       	movw	r16, r24
 832:	eb 01       	movw	r28, r22
 834:	8b 81       	ldd	r24, Y+3	; 0x03
 836:	81 ff       	sbrs	r24, 1
 838:	1b c0       	rjmp	.+54     	; 0x870 <__stack+0x11>
 83a:	82 ff       	sbrs	r24, 2
 83c:	0d c0       	rjmp	.+26     	; 0x858 <fputc+0x30>
 83e:	2e 81       	ldd	r18, Y+6	; 0x06
 840:	3f 81       	ldd	r19, Y+7	; 0x07
 842:	8c 81       	ldd	r24, Y+4	; 0x04
 844:	9d 81       	ldd	r25, Y+5	; 0x05
 846:	28 17       	cp	r18, r24
 848:	39 07       	cpc	r19, r25
 84a:	64 f4       	brge	.+24     	; 0x864 <__stack+0x5>
 84c:	e8 81       	ld	r30, Y
 84e:	f9 81       	ldd	r31, Y+1	; 0x01
 850:	01 93       	st	Z+, r16
 852:	f9 83       	std	Y+1, r31	; 0x01
 854:	e8 83       	st	Y, r30
 856:	06 c0       	rjmp	.+12     	; 0x864 <__stack+0x5>
 858:	e8 85       	ldd	r30, Y+8	; 0x08
 85a:	f9 85       	ldd	r31, Y+9	; 0x09
 85c:	80 2f       	mov	r24, r16
 85e:	09 95       	icall
 860:	89 2b       	or	r24, r25
 862:	31 f4       	brne	.+12     	; 0x870 <__stack+0x11>
 864:	8e 81       	ldd	r24, Y+6	; 0x06
 866:	9f 81       	ldd	r25, Y+7	; 0x07
 868:	01 96       	adiw	r24, 0x01	; 1
 86a:	9f 83       	std	Y+7, r25	; 0x07
 86c:	8e 83       	std	Y+6, r24	; 0x06
 86e:	02 c0       	rjmp	.+4      	; 0x874 <__stack+0x15>
 870:	0f ef       	ldi	r16, 0xFF	; 255
 872:	1f ef       	ldi	r17, 0xFF	; 255
 874:	c8 01       	movw	r24, r16
 876:	df 91       	pop	r29
 878:	cf 91       	pop	r28
 87a:	1f 91       	pop	r17
 87c:	0f 91       	pop	r16
 87e:	08 95       	ret

00000880 <__ultoa_invert>:
 880:	fa 01       	movw	r30, r20
 882:	aa 27       	eor	r26, r26
 884:	28 30       	cpi	r18, 0x08	; 8
 886:	51 f1       	breq	.+84     	; 0x8dc <__ultoa_invert+0x5c>
 888:	20 31       	cpi	r18, 0x10	; 16
 88a:	81 f1       	breq	.+96     	; 0x8ec <__ultoa_invert+0x6c>
 88c:	e8 94       	clt
 88e:	6f 93       	push	r22
 890:	6e 7f       	andi	r22, 0xFE	; 254
 892:	6e 5f       	subi	r22, 0xFE	; 254
 894:	7f 4f       	sbci	r23, 0xFF	; 255
 896:	8f 4f       	sbci	r24, 0xFF	; 255
 898:	9f 4f       	sbci	r25, 0xFF	; 255
 89a:	af 4f       	sbci	r26, 0xFF	; 255
 89c:	b1 e0       	ldi	r27, 0x01	; 1
 89e:	3e d0       	rcall	.+124    	; 0x91c <__ultoa_invert+0x9c>
 8a0:	b4 e0       	ldi	r27, 0x04	; 4
 8a2:	3c d0       	rcall	.+120    	; 0x91c <__ultoa_invert+0x9c>
 8a4:	67 0f       	add	r22, r23
 8a6:	78 1f       	adc	r23, r24
 8a8:	89 1f       	adc	r24, r25
 8aa:	9a 1f       	adc	r25, r26
 8ac:	a1 1d       	adc	r26, r1
 8ae:	68 0f       	add	r22, r24
 8b0:	79 1f       	adc	r23, r25
 8b2:	8a 1f       	adc	r24, r26
 8b4:	91 1d       	adc	r25, r1
 8b6:	a1 1d       	adc	r26, r1
 8b8:	6a 0f       	add	r22, r26
 8ba:	71 1d       	adc	r23, r1
 8bc:	81 1d       	adc	r24, r1
 8be:	91 1d       	adc	r25, r1
 8c0:	a1 1d       	adc	r26, r1
 8c2:	20 d0       	rcall	.+64     	; 0x904 <__ultoa_invert+0x84>
 8c4:	09 f4       	brne	.+2      	; 0x8c8 <__ultoa_invert+0x48>
 8c6:	68 94       	set
 8c8:	3f 91       	pop	r19
 8ca:	2a e0       	ldi	r18, 0x0A	; 10
 8cc:	26 9f       	mul	r18, r22
 8ce:	11 24       	eor	r1, r1
 8d0:	30 19       	sub	r19, r0
 8d2:	30 5d       	subi	r19, 0xD0	; 208
 8d4:	31 93       	st	Z+, r19
 8d6:	de f6       	brtc	.-74     	; 0x88e <__ultoa_invert+0xe>
 8d8:	cf 01       	movw	r24, r30
 8da:	08 95       	ret
 8dc:	46 2f       	mov	r20, r22
 8de:	47 70       	andi	r20, 0x07	; 7
 8e0:	40 5d       	subi	r20, 0xD0	; 208
 8e2:	41 93       	st	Z+, r20
 8e4:	b3 e0       	ldi	r27, 0x03	; 3
 8e6:	0f d0       	rcall	.+30     	; 0x906 <__ultoa_invert+0x86>
 8e8:	c9 f7       	brne	.-14     	; 0x8dc <__ultoa_invert+0x5c>
 8ea:	f6 cf       	rjmp	.-20     	; 0x8d8 <__ultoa_invert+0x58>
 8ec:	46 2f       	mov	r20, r22
 8ee:	4f 70       	andi	r20, 0x0F	; 15
 8f0:	40 5d       	subi	r20, 0xD0	; 208
 8f2:	4a 33       	cpi	r20, 0x3A	; 58
 8f4:	18 f0       	brcs	.+6      	; 0x8fc <__ultoa_invert+0x7c>
 8f6:	49 5d       	subi	r20, 0xD9	; 217
 8f8:	31 fd       	sbrc	r19, 1
 8fa:	40 52       	subi	r20, 0x20	; 32
 8fc:	41 93       	st	Z+, r20
 8fe:	02 d0       	rcall	.+4      	; 0x904 <__ultoa_invert+0x84>
 900:	a9 f7       	brne	.-22     	; 0x8ec <__ultoa_invert+0x6c>
 902:	ea cf       	rjmp	.-44     	; 0x8d8 <__ultoa_invert+0x58>
 904:	b4 e0       	ldi	r27, 0x04	; 4
 906:	a6 95       	lsr	r26
 908:	97 95       	ror	r25
 90a:	87 95       	ror	r24
 90c:	77 95       	ror	r23
 90e:	67 95       	ror	r22
 910:	ba 95       	dec	r27
 912:	c9 f7       	brne	.-14     	; 0x906 <__ultoa_invert+0x86>
 914:	00 97       	sbiw	r24, 0x00	; 0
 916:	61 05       	cpc	r22, r1
 918:	71 05       	cpc	r23, r1
 91a:	08 95       	ret
 91c:	9b 01       	movw	r18, r22
 91e:	ac 01       	movw	r20, r24
 920:	0a 2e       	mov	r0, r26
 922:	06 94       	lsr	r0
 924:	57 95       	ror	r21
 926:	47 95       	ror	r20
 928:	37 95       	ror	r19
 92a:	27 95       	ror	r18
 92c:	ba 95       	dec	r27
 92e:	c9 f7       	brne	.-14     	; 0x922 <__ultoa_invert+0xa2>
 930:	62 0f       	add	r22, r18
 932:	73 1f       	adc	r23, r19
 934:	84 1f       	adc	r24, r20
 936:	95 1f       	adc	r25, r21
 938:	a0 1d       	adc	r26, r0
 93a:	08 95       	ret

0000093c <__prologue_saves__>:
 93c:	2f 92       	push	r2
 93e:	3f 92       	push	r3
 940:	4f 92       	push	r4
 942:	5f 92       	push	r5
 944:	6f 92       	push	r6
 946:	7f 92       	push	r7
 948:	8f 92       	push	r8
 94a:	9f 92       	push	r9
 94c:	af 92       	push	r10
 94e:	bf 92       	push	r11
 950:	cf 92       	push	r12
 952:	df 92       	push	r13
 954:	ef 92       	push	r14
 956:	ff 92       	push	r15
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	cd b7       	in	r28, 0x3d	; 61
 962:	de b7       	in	r29, 0x3e	; 62
 964:	ca 1b       	sub	r28, r26
 966:	db 0b       	sbc	r29, r27
 968:	0f b6       	in	r0, 0x3f	; 63
 96a:	f8 94       	cli
 96c:	de bf       	out	0x3e, r29	; 62
 96e:	0f be       	out	0x3f, r0	; 63
 970:	cd bf       	out	0x3d, r28	; 61
 972:	09 94       	ijmp

00000974 <__epilogue_restores__>:
 974:	2a 88       	ldd	r2, Y+18	; 0x12
 976:	39 88       	ldd	r3, Y+17	; 0x11
 978:	48 88       	ldd	r4, Y+16	; 0x10
 97a:	5f 84       	ldd	r5, Y+15	; 0x0f
 97c:	6e 84       	ldd	r6, Y+14	; 0x0e
 97e:	7d 84       	ldd	r7, Y+13	; 0x0d
 980:	8c 84       	ldd	r8, Y+12	; 0x0c
 982:	9b 84       	ldd	r9, Y+11	; 0x0b
 984:	aa 84       	ldd	r10, Y+10	; 0x0a
 986:	b9 84       	ldd	r11, Y+9	; 0x09
 988:	c8 84       	ldd	r12, Y+8	; 0x08
 98a:	df 80       	ldd	r13, Y+7	; 0x07
 98c:	ee 80       	ldd	r14, Y+6	; 0x06
 98e:	fd 80       	ldd	r15, Y+5	; 0x05
 990:	0c 81       	ldd	r16, Y+4	; 0x04
 992:	1b 81       	ldd	r17, Y+3	; 0x03
 994:	aa 81       	ldd	r26, Y+2	; 0x02
 996:	b9 81       	ldd	r27, Y+1	; 0x01
 998:	ce 0f       	add	r28, r30
 99a:	d1 1d       	adc	r29, r1
 99c:	0f b6       	in	r0, 0x3f	; 63
 99e:	f8 94       	cli
 9a0:	de bf       	out	0x3e, r29	; 62
 9a2:	0f be       	out	0x3f, r0	; 63
 9a4:	cd bf       	out	0x3d, r28	; 61
 9a6:	ed 01       	movw	r28, r26
 9a8:	08 95       	ret

000009aa <_exit>:
 9aa:	f8 94       	cli

000009ac <__stop_program>:
 9ac:	ff cf       	rjmp	.-2      	; 0x9ac <__stop_program>
